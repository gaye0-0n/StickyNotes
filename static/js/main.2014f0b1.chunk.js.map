{"version":3,"sources":["components/SignIn.js","util/validation.js","components/Calendarheader.js","components/Calendar.js","components/TodoList.js","components/Main.js","App.js","index.js","stores/UserStore.js"],"names":["SignIn","className","initialValues","userid","email","password","validationSchema","Yup","required","matches","message","onSubmit","values","props","signIn","handleSubmit","id","defaultValue","placeholder","name","type","onChange","handleChange","React","Component","Calendarheader","console","log","this","calendarYM","today","onClick","moveMonth","DateHeader","dateToArray","dates","Array","isArray","split","mapArrayToDate","dateArray","length","Error","map","date","index","Week","state","Days","firstDayFormat","weekIndex","_days","i","Day","moment","add","push","yearMonthDayFormat","format","getDay","isHolyDay","mapDaysToComponents","calendarMonthYear","selectedDayFormat","fn","thisMonth","dayInfo","isSame","firstDayOfThisWeekformat","ymOfThisCalendar","selected","Calendar","Weeks","monthYear","clickFn","firstDayOfMonth","startOf","firstDateOfMonth","get","firstDayOfWeek","clone","_Weeks","YM","changeSelected","TodoList","useState","item","setItem","JSON","parse","localStorage","getItem","items","setItems","useEffect","stringify","newItem","trim","uuidv4","color","randomColor","luminosity","defaultPos","x","y","alert","value","e","target","onKeyPress","keyCode","which","keyPress","defaultPosition","onStop","_","data","newArray","updatePos","style","backgroundColor","filter","Main","inject","observer","month","setState","clickedDate","isBefore","isAfter","userStore","usermail","defaultProps","App","setUserid","setUsermail","isSignIn","observable","action","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2014f0b1.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../styles/SignIn.css'\r\nimport { Formik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { vUserid, vEmail, vPassword } from '../util/validation'\r\n\r\nclass SignIn extends React.Component{\r\n  render(){\r\n    return (<div className=\"signin\">\r\n      <div className=\"signin__wrapper\">\r\n        <div className=\"signin__form\">\r\n          <Formik\r\n          initialValues={{\r\n            userid:\"\",\r\n            email:\"\",\r\n            password:\"\"\r\n          }}\r\n          validationSchema={ Yup.object({\r\n            userid: vUserid(),\r\n            email: vEmail(),\r\n            password: vPassword()\r\n          })}\r\n          onSubmit={(values) => {\r\n            this.props.signIn(values)\r\n          }}\r\n          >\r\n            {props => <form onSubmit={props.handleSubmit}>\r\n              <h2>LOGIN</h2>\r\n              <input id=\"userid\" defaultValue={props.values.email} placeholder=\"NAME\"\r\n                name=\"userid\" type=\"text\" onChange={props.handleChange} />\r\n              <br />\r\n              <input id=\"email\" defaultValue={props.values.email} placeholder=\"E-Mail\"\r\n                name=\"email\" type=\"email\" onChange={props.handleChange} />\r\n              <br />\r\n              <input id=\"password\" defaultValue={props.values.password} placeholder=\"Password\"\r\n                name=\"password\" type=\"password\" onChange={props.handleChange} />\r\n              <br />\r\n              <button className=\"submit__btn\" type=\"submit\">LOGIN</button><br />\r\n            </form>}\r\n          </Formik>\r\n        </div>\r\n        <div className=\"signin__register\">\r\n          <p>Not registered? \r\n          <span className=\"signin__register__create\"> Create an account</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>)\r\n  }\r\n}\r\n\r\nexport default SignIn","import * as Yup from \"yup\";\r\n\r\nexport function vUserid() {\r\n  return Yup.string(\"\")\r\n    .required(\"사용자이름이 필요합니다.\")\r\n}\r\n\r\nexport function vEmail() {\r\n  return Yup.string(\"\")\r\n    .email(\"올바른 이메일 주소를 입력하세요.\")\r\n    .required(\"이메일 주소가 필요합니다.\");\r\n}\r\n\r\nexport function vPassword() {\r\n  let check1 = /^(?=.*[a-z])(?=.*[0-9]).{8,15}$/;\r\n\tlet check2 = /^(?=.*[a-z])(?=.*[^a-z0-9]).{8,15}$/;\r\n\tlet check3 = /^(?=.*[^a-z0-9])(?=.*[0-9]).{8,15}$/;\r\n\r\n  return Yup.string(\"\")\r\n    .matches(check1 || check2 || check3,\r\n      {message: \"영문/숫자 포함, 8~15자를 입력해 주세요.\"})\r\n    .required(\"패스워드가 필요합니다.\");           \r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Calendarheader extends Component{\r\n  render() {\r\n    console.log(this.props)\r\n    return (\r\n      <div className=\"header-container\">\r\n        <h2>\r\n          {this.props.calendarYM}\r\n        </h2>\r\n        <h3>\r\n          {this.props.today}\r\n        </h3>\r\n\r\n        <ul className=\"header-buttons header-middle\">\r\n          <li>\r\n            <i className=\"move-button left-img icon\"\r\n              onClick={() => {this.props.moveMonth(-1)}}></i>\r\n          </li>\r\n          <li>\r\n            <i className=\"move-button right-img icon\"\r\n              onClick={() => {this.props.moveMonth(1)}}></i>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport moment from 'moment';\r\n\r\nclass DateHeader extends Component{\r\n\r\n  dateToArray = (dates) => {\r\n    if(Array.isArray(dates)){\r\n      return dates\r\n    }else if(typeof dates === \"string\"){\r\n      return dates.split(',')\r\n    }else{\r\n      return [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"]\r\n    }\r\n  }\r\n\r\n  mapArrayToDate = (dateArray) => {\r\n    try{\r\n      if(dateArray.length !== 7){\r\n        console.log(new Error(\"7에 에러이다!!\"))\r\n        dateArray = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"]\r\n      }\r\n\r\n      return dateArray.map((date, index) => {\r\n        const className = () => {\r\n          let className = \"calendar-date-component\";\r\n          if (index === 0) {\r\n            return className + \" date-sun\"\r\n          } else if (index === 6) {\r\n            return className + \" date-sat\"\r\n          } else {\r\n            return className + \" date-weekday\"\r\n          }\r\n        }\r\n        return (\r\n          <div className={className()} key={\"header-\" + date}>\r\n            {date}\r\n          </div>\r\n        )\r\n      })\r\n    }catch{\r\n      throw new Error (\"date must be string or component\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"calendar-date-header\">\r\n        {this.mapArrayToDate(this.dateToArray(this.props.dates))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Week extends Component {\r\n\r\n  state = {}\r\n\r\n  Days = (firstDayFormat,weekIndex) => {\r\n    const _days = [];\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n\r\n      const Day = moment(firstDayFormat).add('d', i);\r\n      _days.push({\r\n        yearMonthDayFormat: Day.format(\"YYYY-MM-DD\"),\r\n        getDay: Day.format('D'),\r\n        isHolyDay: false,\r\n        weekIndex\r\n      });\r\n    }\r\n\r\n    return _days;\r\n  }\r\n\r\n  mapDaysToComponents = (Days, calendarMonthYear, selectedDayFormat, fn = () => { }) => {\r\n    const thisMonth = moment(calendarMonthYear);\r\n\r\n    return Days.map((dayInfo, i) => {\r\n\r\n      let className = \"date-weekday-label\";\r\n\r\n      if (!thisMonth.isSame(dayInfo.yearMonthDayFormat,'month')) {\r\n        className = \"date-notThisMonth\";\r\n      } else if (i === 0) {\r\n        className = \"date-sun\"\r\n      }else if(i===6){\r\n        className =\"date-sat\"\r\n      }\r\n\r\n      if(moment(dayInfo.yearMonthDayFormat).isSame(selectedDayFormat,'day')){\r\n        className = \"selected\"\r\n      }\r\n\r\n      return (\r\n        <div className={\"calendar-day \" + className} \r\n          key={`RCA-${dayInfo.weekIndex}-${i}-day`} \r\n          onClick={() => fn(dayInfo.yearMonthDayFormat)}>\r\n          <label className=\"calendar-day-label\">\r\n            {dayInfo.getDay}\r\n          </label>\r\n        </div>\r\n      )\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"calendar-week\">\r\n        {this.mapDaysToComponents(this.Days(this.props.firstDayOfThisWeekformat,\r\n        this.props.weekIndex),\r\n        this.props.ymOfThisCalendar,\r\n        this.props.selected,\r\n        this.props.fn\r\n        )}\r\n      </div>)\r\n  }\r\n}\r\n\r\nexport default class Calendar extends Component{\r\n\r\n  Weeks = (monthYear,selected,clickFn) => {\r\n    const firstDayOfMonth = moment(monthYear).startOf('month');\r\n    const firstDateOfMonth = firstDayOfMonth.get('d');\r\n\r\n    const firstDayOfWeek = firstDayOfMonth.clone().add('d', -firstDateOfMonth);\r\n\r\n    const _Weeks = [];\r\n\r\n    for(let i = 0; i < 6; i++){\r\n      _Weeks.push((\r\n        <Week key={`calendar-week-${i}`}\r\n          ymOfThisCalendar={firstDayOfMonth.format(\"YYYY-MM\")}\r\n          weekIndex={i}\r\n          ymOfThisCalendar={firstDayOfMonth.format(\"YYYY-MM\")}\r\n          firstDayOfThisWeekformat={firstDayOfWeek.clone().add('d', i * 7).format(\"YYYY-MM-DD\")}\r\n          selected={selected}\r\n          fn={clickFn}\r\n        />\r\n      ))\r\n    }\r\n    return _Weeks\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"calendar-container\">\r\n        <DateHeader dates={[\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"]} />\r\n        {this.Weeks(this.props.YM,this.props.selected,this.props.changeSelected)}\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { randomColor } from 'randomcolor'\r\nimport Draggable from 'react-draggable'\r\nimport '../styles/TodoList.css'\r\n\r\nfunction TodoList() {\r\n\r\n  const [item, setItem] = useState('')\r\n  const [items, setItems] = useState(\r\n    JSON.parse(localStorage.getItem('items')) || []\r\n  )\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('items', JSON.stringify(items))\r\n  }, [items])\r\n\r\n  const newItem = () => {\r\n    if (item.trim() !== '') {\r\n      const newItem = {\r\n        id: uuidv4(),\r\n        item: item,\r\n        color: randomColor({\r\n          luminosity : 'light'\r\n        }),\r\n        defaultPos: {\r\n          x : 1220,\r\n          y : -780\r\n        } // 위치 지정\r\n      }\r\n      setItems((items) => [...items, newItem])\r\n      setItem('')\r\n    }else{\r\n      alert('Enter Something...')\r\n      setItem('')\r\n    }\r\n  }\r\n\r\n  const deleteNode = (id) => {\r\n    setItems(items.filter((item) => item.id !== id))\r\n  }\r\n\r\n  const updatePos = (data, index) => {\r\n    let newArray = [...items]\r\n    newArray[index].defaultPos = { x: data.x, y: data.y}\r\n    setItems(newArray)\r\n  }\r\n\r\n  const keyPress = (e) => {\r\n    const code = e.keyCode || e.which\r\n    if( code === 13 ){\r\n      newItem()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"wrapper\">\r\n            <input \r\n              type=\"text\" \r\n              placeholder=\"Enter something...\"\r\n              value={item} \r\n              onChange={(e) => setItem(e.target.value)}\r\n              onKeyPress={(e) => keyPress(e)} />\r\n            <button className=\"enter\" onClick={newItem}>등록</button>\r\n        </div>\r\n          {\r\n            items.map((item, index) => {\r\n              return (\r\n                <Draggable key={index} defaultPosition={item.defaultPos}\r\n                  onStop={(_, data) => {\r\n                    updatePos(data, index)\r\n                  }}>\r\n                  <div className=\"todo__item\" style={{backgroundColor: item.color}}>\r\n                    {`${item.item}`}\r\n                    <button className=\"delete\" onClick={() => deleteNode(item.id)}>X</button>\r\n                  </div>\r\n                </Draggable>\r\n              )\r\n            })\r\n          }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React from 'react'\r\nimport { observer, inject } from 'mobx-react'\r\nimport Calendarheader from \"./Calendarheader\";\r\nimport Calendar from \"./Calendar\";\r\nimport TodoList from \"./TodoList\";\r\nimport '../styles/header.css'\r\nimport '../styles/Main.css'\r\nimport '../styles/TodoList.css'\r\nimport moment from 'moment';\r\n\r\n@inject('userStore')\r\n@observer\r\nclass Main extends React.Component{\r\n\r\n  state = {\r\n    calendarYM : moment(),\r\n    today : moment(),\r\n    selected : moment().format(\"YYYY-MM-DD\")\r\n  }\r\n\r\n  static defaultProps = {\r\n    clickFn : () => {}\r\n  }\r\n\r\n  moveMonth = (month) => {\r\n    this.setState({\r\n      calendarYM : this.state.calendarYM.add(month, 'M')\r\n    })\r\n  }\r\n\r\n  changeSelected = (clickedDate) =>{\r\n \r\n    if(moment(clickedDate).isSame(this.state.selected,'day')){\r\n        this.props.clickFn(clickedDate);\r\n        return;\r\n    }\r\n\r\n    this.setState({\r\n        selected : clickedDate\r\n    })\r\n\r\n    this.props.clickFn(clickedDate)\r\n    \r\n    if(moment(clickedDate).isBefore(this.state.calendarYM,'month')){\r\n        this.moveMonth(-1)\r\n    }else if(moment(clickedDate).isAfter(this.state.calendarYM,'month')){\r\n        this.moveMonth(1)\r\n    }\r\n}\r\n\r\n  render(){\r\n    const { userStore } = this.props\r\n    const { userid, usermail } = userStore\r\n    return (<div>\r\n      <header>\r\n        <h1><span className=\"username\">{userid}'s</span> <span className=\"note\">Sticky Notes</span></h1>\r\n        \r\n        <div className=\"bottom\">\r\n          <h3>{usermail}</h3>\r\n          <p>\r\n            이 페이지는 자신의 일정을 메모장에 <br /> 적어 스케줄을 관리하는 페이지다.<br />\r\n            본인 할일 목록 및 스케줄을 적은 뒤 <br /> 등록을 누르면 메모장이 생성되어 원하는 날짜에\r\n            메모장을 끌어 놔둘 수 있다.\r\n          </p>\r\n          <nav>\r\n            <ul>\r\n              <li>유튜브</li>\r\n              <li>페이스북</li>\r\n              <li>인스타그램</li>\r\n              <li>트위터</li>\r\n              <li>이메일</li>\r\n            </ul>\r\n            <p className=\"made\">Sticky Notes by Noh Ga-yeon</p>\r\n          </nav>\r\n        </div>\r\n      </header>\r\n\r\n      <main>\r\n        <div className=\"calendar-layout\">\r\n          <div className=\"container\">\r\n            <Calendarheader calendarYM={this.state.calendarYM.format(\"YYYY년 MM월\")}\r\n                today={this.state.today.format(\"YYYY - MM - DD\")}\r\n                moveMonth={this.moveMonth} />\r\n            <Calendar YM={this.state.calendarYM.format(\"YYYY-MM-DD\")}\r\n                selected={this.state.selected}\r\n                changeSelected={this.changeSelected} />\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <TodoList />\r\n        </div>\r\n      </main>\r\n    </div>)\r\n  }\r\n}\r\n\r\nexport default Main","import React from 'react';\nimport SignIn from './components/SignIn'\nimport Main from './components/Main'\nimport './App.css'\nimport { observer, inject } from 'mobx-react'\n\n@inject('userStore')\n@observer\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      isSignIn : false\n    }\n  }\n\n  // signIn 컴포넌트에서 formik을 통한 로그인을 성공하면 isSignIn을 true로 만든다!\n  signIn = (values) => {\n    const { userid, email } = values;\n    const { userStore } = this.props\n    userStore.setUserid(userid)\n    userStore.setUsermail(email)\n    this.setState({\n      isSignIn: true\n    })\n  }\n\n  render(){\n    const { isSignIn } = this.state\n    return (\n      isSignIn ? <div className=\"content__container\">\n      <Main />\n    </div> : <div className=\"signin__container\">\n      <SignIn signIn={this.signIn} />\n    </div>)\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'mobx-react';\nimport { UserStore } from './stores/UserStore';\n\nconst userStore = new UserStore()\n\nReactDOM.render(\n  <Provider userStore={userStore}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);","import { observable, action } from 'mobx'\r\n\r\nexport class UserStore{\r\n\r\n  /*\r\n  로그인 페이지에서는 사용자 계정명을 저장하고\r\n  본 페이지에서는 사용자 계정명을 표시하고 \r\n  */\r\n\r\n  @observable \r\n  userid = \"\"\r\n  usermail = \"\"\r\n\r\n  @action \r\n  setUserid = (userid) => {\r\n    this.userid = userid\r\n  }\r\n  \r\n  setUsermail = (usermail) => {\r\n    this.usermail = usermail\r\n  }\r\n}"],"sourceRoot":""}